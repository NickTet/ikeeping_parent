<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zz.ikeeping.server.shop.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.zz.ikeeping.entity.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="imgurl" jdbcType="VARCHAR" property="imgurl" />
    <result column="goodstype" jdbcType="INTEGER" property="goodstype" />
    <result column="goodscount" jdbcType="INTEGER" property="goodscount" />
  </resultMap>
  <resultMap id="goodsDTOMap" type="com.zz.ikeeping.server.shop.dto.GoodsDTO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="imgurl" jdbcType="VARCHAR" property="imgurl" />
    <result column="goodstype" jdbcType="INTEGER" property="goodstype" />
    <result column="sellcount" jdbcType="INTEGER" property="sellcount" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, price, flag, imgurl, goodstype, goodscount
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zz.ikeeping.entity.Goods">
    insert into t_goods (id, name, price, 
      flag, imgurl, goodstype, 
      goodscount)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{flag,jdbcType=INTEGER}, #{imgurl,jdbcType=VARCHAR}, #{goodstype,jdbcType=INTEGER}, 
      #{goodscount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zz.ikeeping.entity.Goods">
    insert into t_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="imgurl != null">
        imgurl,
      </if>
      <if test="goodstype != null">
        goodstype,
      </if>
      <if test="goodscount != null">
        goodscount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null">
        #{goodstype,jdbcType=INTEGER},
      </if>
      <if test="goodscount != null">
        #{goodscount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zz.ikeeping.entity.Goods">
    update t_goods
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="imgurl != null">
        imgurl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="goodstype != null">
        goodstype = #{goodstype,jdbcType=INTEGER},
      </if>
      <if test="goodscount != null">
        goodscount = #{goodscount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zz.ikeeping.entity.Goods">
    update t_goods
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      goodstype = #{goodstype,jdbcType=INTEGER},
      goodscount = #{goodscount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByTypeid" parameterType="int" resultMap="goodsDTOMap">
  select id,name,price,imgurl,goodstype,ifnull(sellcount,0) sellcount
  from
      (select id,name,price,imgurl,goodstype,count(goodscount) sellcount
      from
          (select g.id, g.name, g.price, g.imgurl, g.goodstype, case when o.status=1 then 0 else od.goodscount end as goodscount
          from t_goods g
          left join t_orderdetail od
          on g.id = od.gid
          left join t_order o
          on o.id = od.oid
          where goodstype=#{goodstype}) dto
      group by id) ddo
  </select>
  <select id="selectByTypeidPriceAsc" parameterType="int" resultMap="goodsDTOMap">
  select id,name,price,imgurl,goodstype,ifnull(sellcount,0) sellcount
  from
      (select id,name,price,imgurl,goodstype,count(goodscount) sellcount
      from
          (select g.id, g.name, g.price, g.imgurl, g.goodstype, case when o.status=1 then 0 else od.goodscount end as goodscount
          from t_goods g
          left join t_orderdetail od
          on g.id = od.gid
          left join t_order o
          on o.id = od.oid
          where goodstype=#{goodstype}) dto
      group by id) ddo
  order by price asc
  </select>
  <select id="selectByTypeidPriceDesc" parameterType="int" resultMap="goodsDTOMap">
  select id,name,price,imgurl,goodstype,ifnull(sellcount,0) sellcount
  from
      (select id,name,price,imgurl,goodstype,count(goodscount) sellcount
      from
          (select g.id, g.name, g.price, g.imgurl, g.goodstype, case when o.status=1 then 0 else od.goodscount end as goodscount
          from t_goods g
          left join t_orderdetail od
          on g.id = od.gid
          left join t_order o
          on o.id = od.oid
          where goodstype=#{goodstype}) dto
      group by id) ddo
  order by price desc
  </select>
  <select id="selectByTypeidSellAsc" parameterType="int" resultMap="goodsDTOMap">
  select id,name,price,imgurl,goodstype,ifnull(sellcount,0) sellcount
  from
      (select id,name,price,imgurl,goodstype,count(goodscount) sellcount
      from
          (select g.id, g.name, g.price, g.imgurl, g.goodstype, case when o.status=1 then 0 else od.goodscount end as goodscount
          from t_goods g
          left join t_orderdetail od
          on g.id = od.gid
          left join t_order o
          on o.id = od.oid
          where goodstype=#{goodstype}) dto
      group by id) ddo
  order by sellcount asc
  </select>
  <select id="selectByTypeidSellDesc" parameterType="int" resultMap="goodsDTOMap">
  select id,name,price,imgurl,goodstype,ifnull(sellcount,0) sellcount
  from
      (select id,name,price,imgurl,goodstype,count(goodscount) sellcount
      from
          (select g.id, g.name, g.price, g.imgurl, g.goodstype, case when o.status=1 then 0 else od.goodscount end as goodscount
          from t_goods g
          left join t_orderdetail od
          on g.id = od.gid
          left join t_order o
          on o.id = od.oid
          where goodstype=#{goodstype}) dto
      group by id) ddo
  order by sellcount desc
  </select>
</mapper>